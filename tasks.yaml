# Holoform Project: Research and Testing Tasks
# This file breaks down the high-level milestones into a more granular, actionable task list.
# Each task is designed to be a concrete unit of work for research, implementation, or testing.

milestone_3:
  name: "Enhanced Representation, Metrics, & Initial LLM Interaction"
  sub_tasks:
    M3_0_Conceptual_And_Documentation:
      name: "Conceptual & Documentation"
      tasks:
        - id: M3.0.1.1
          description: "Draft the initial SPECIFICATION.md file."
          type: "documentation"
          deliverable: "A new SPECIFICATION.md file in the root directory."
        - id: M3.0.1.2
          description: "Define the JSON schema for the Holoform v1.0, including fields for id, description, input_parameters, operations, and output_variable_name."
          type: "documentation"
          deliverable: "JSON schema definition within SPECIFICATION.md."
        - id: M3.0.1.3
          description: "Version the initial schema as v1.0 in SPECIFICATION.md."
          type: "documentation"
          deliverable: "Version number in SPECIFICATION.md."
        - id: M3.0.2.1
          description: "Create a new design note in the `notes` directory for multi-language support."
          type: "documentation"
          deliverable: "A new markdown file in `notes`."
        - id: M3.0.2.2
          description: "Research and document the high-level challenges of creating a language-agnostic Holoform representation."
          type: "research"
          deliverable: "Section in the design note on language-agnosticism."
        - id: M3.0.2.3
          description: "Outline a potential strategy for adapting the Holoform generator for a second language (e.g., JavaScript/TypeScript or Java)."
          type: "research"
          deliverable: "Section in the design note with a proposed strategy."

    M3_1_State_Modifications:
      name: "Holoform Representation for State Modifications"
      tasks:
        - id: M3.1.1.1
          description: "Analyze and document common patterns of state change in Python, including attribute assignment (`obj.attr = x`), list appends, and dictionary assignments."
          type: "research"
          deliverable: "A new research note in the `notes` directory."
        - id: M3.1.2.1
          description: "Design Holoform schema extensions for attribute assignments, including new operation types and fields for object ID, attribute name, and the assigned value."
          type: "design"
          deliverable: "Schema extension definition in `SPECIFICATION.md`."
        - id: M3.1.2.2
          description: "Design Holoform schema extensions for list `append` calls."
          type: "design"
          deliverable: "Schema extension definition in `SPECIFICATION.md`."
        - id: M3.1.2.3
          description: "Design Holoform schema extensions for dictionary key assignments."
          type: "design"
          deliverable: "Schema extension definition in `SPECIFICATION.md`."
        - id: M3.1.3.1
          description: "Extend the AST visitor to parse `obj.attr = value` assignments."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py`."
        - id: M3.1.3.2
          description: "Extend the AST visitor to parse `my_list.append()` calls."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py`."
        - id: M3.1.3.3
          description: "Extend the AST visitor to parse `my_dict['key'] = val` assignments."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py`."
        - id: M3.1.4.1
          description: "Create a new test case in `test_code_strings.py` for attribute assignment."
          type: "testing"
          deliverable: "Updated `test_code_strings.py`."
        - id: M3.1.4.2
          description: "Add a test to `run_tests.py` to validate the new attribute assignment test case."
          type: "testing"
          deliverable: "Updated `run_tests.py`."
        - id: M3.1.4.3
          description: "Create a new test case in `test_code_strings.py` for list append calls."
          type: "testing"
          deliverable: "Updated `test_code_strings.py`."
        - id: M3.1.4.4
          description: "Add a test to `run_tests.py` to validate the new list append test case."
          type: "testing"
          deliverable: "Updated `run_tests.py`."
        - id: M3.1.4.5
          description: "Create a new test case in `test_code_strings.py` for dictionary key assignments."
          type: "testing"
          deliverable: "Updated `test_code_strings.py`."
        - id: M3.1.4.6
          description: "Add a test to `run_tests.py` to validate the new dictionary key assignment test case."
          type: "testing"
          deliverable: "Updated `run_tests.py`."

    M3_2_Classes_And_Methods:
      name: "Holoform Representation for Classes and Methods"
      tasks:
        - id: M3.2.1.1
          description: "Design the Holoform schema for classes, including fields for class name, parent classes, a list of method Holoform IDs, and class attributes."
          type: "design"
          deliverable: "Schema definition in `SPECIFICATION.md`."
        - id: M3.2.1.2
          description: "Design the Holoform schema for methods, capturing `self` and the linkage to the class Holoform."
          type: "design"
          deliverable: "Schema definition in `SPECIFICATION.md`."
        - id: M3.2.2.1
          description: "Extend the AST visitor to parse `ClassDef` nodes."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py`."
        - id: M3.2.2.2
          description: "Extend the AST visitor to parse `FunctionDef` nodes within classes as methods."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py`."
        - id: M3.2.2.3
          description: "Extend the AST visitor to identify `__init__` methods and parse `self.x = ...` assignments as instance attribute initializations."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py`."
        - id: M3.2.2.4
          description: "Extend the AST visitor to parse instance method calls (`my_object.do_something()`)."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py`."
        - id: M3.2.3.1
          description: "Create a new test case in `test_code_strings.py` for a simple class definition."
          type: "testing"
          deliverable: "Updated `test_code_strings.py`."
        - id: M3.2.3.2
          description: "Add a test to `run_tests.py` to validate the new class definition test case."
          type: "testing"
          deliverable: "Updated `run_tests.py`."
        - id: M3.2.3.3
          description: "Create a new test case in `test_code_strings.py` for class instantiation."
          type: "testing"
          deliverable: "Updated `test_code_strings.py`."
        - id: M3.2.3.4
          description: "Add a test to `run_tests.py` to validate the new class instantiation test case."
          type: "testing"
          deliverable: "Updated `run_tests.py`."
        - id: M3.2.3.5
          description: "Create a new test case in `test_code_strings.py` for an instance method call."
          type: "testing"
          deliverable: "Updated `test_code_strings.py`."
        - id: M3.2.3.6
          description: "Add a test to `run_tests.py` to validate the new instance method call test case."
          type: "testing"
          deliverable: "Updated `run_tests.py`."

    M3_3_Metrics:
      name: "Develop Robust Metrics for Holoform Evaluation"
      tasks:
        - id: M3.3.1.1
          description: "Define the formula for 'Semantic Compression Ratio' as (Source Tokens - Textualized Holoform Tokens) / Source Tokens."
          type: "design"
          deliverable: "Formula documented in a new `METRICS.md` file."
        - id: M3.3.1.2
          description: "Implement a Python function to calculate the Semantic Compression Ratio."
          type: "implementation"
          deliverable: "A new `metrics.py` file in `src/holoform_generators`."
        - id: M3.3.2.1
          description: "Define the criteria for a 'Semantic Fidelity Score', evaluating the preservation of key operational elements (variables, operations, calls, control flow, data dependencies)."
          type: "design"
          deliverable: "Criteria documented in `METRICS.md`."
        - id: M3.3.2.2
          description: "Prototype a Python function to programmatically calculate the Semantic Fidelity Score."
          type: "implementation"
          deliverable: "Function in `metrics.py`."
        - id: M3.3.3.1
          description: "Develop a script to automate the calculation of all defined metrics on a given set of Holoforms."
          type: "implementation"
          deliverable: "A new `calculate_metrics.py` script."
        - id: M3.3.4.1
          description: "Establish a benchmark set of at least 10 diverse Python code snippets for consistent metric evaluation."
          type: "testing"
          deliverable: "A new `benchmark` directory with Python files."
        - id: M3.3.5.1
          description: "Propose initial target thresholds for the Semantic Compression Ratio and Semantic Fidelity Score, with justifications."
          type: "research"
          deliverable: "Section in `METRICS.md`."
        - id: M3.3.6.1
          description: "Define initial project falsification thresholds based on the metrics (e.g., 'If compression < X% or fidelity < Y% on benchmark Z, the current abstraction is insufficient')."
          type: "research"
          deliverable: "Section in `METRICS.md`."

    M3_4_LLM_Interaction:
      name: "Initial LLM Interaction with Textual Holoforms"
      tasks:
        - id: M3.4.1.1
          description: "Define 3 simple code understanding tasks for LLM evaluation (e.g., 'Explain the purpose of this function', 'Identify data sources for a variable')."
          type: "design"
          deliverable: "A new `llm_experiments.md` file with task definitions."
        - id: M3.4.2.1
          description: "Develop a consistent, human-readable textual serialization format for individual Holoforms."
          type: "implementation"
          deliverable: "A new `serialization.py` file in `src/holoform_generators`."
        - id: M3.4.3.1
          description: "Design prompts for feeding the textual Holoform and the task query to an LLM."
          type: "design"
          deliverable: "Prompt templates in `llm_experiments.md`."
        - id: M3.4.4.1
          description: "Conduct an initial experiment by sending a prompt to a chosen LLM API."
          type: "experiment"
          deliverable: "A new experiment report in the `experiments` directory."
        - id: M3.4.4.2
          description: "Document the inputs, outputs, and LLM configurations for the experiment."
          type: "documentation"
          deliverable: "Content in the new experiment report."
        - id: M3.4.5.1
          description: "Qualitatively evaluate the LLM's response for accuracy, relevance, and clarity."
          type: "analysis"
          deliverable: "Analysis section in the experiment report."
        - id: M3.4.5.2
          description: "Define simple success criteria for the LLM tasks."
          type: "design"
          deliverable: "Success criteria in `llm_experiments.md`."

milestone_4:
  name: "Advanced Holoform Features, Inter-Holoform Analysis & Scalability"
  sub_tasks:
    M4_0_Dynamic_Semantics:
      name: "Conceptual - Deeper Dive into Dynamic Semantics"
      tasks:
        - id: M4.0.1.1
          description: "Investigate and document strategies for representing or annotating dynamic method dispatch."
          type: "research"
          deliverable: "A new research note on dynamic semantics."
        - id: M4.0.1.2
          description: "Investigate and document strategies for representing or annotating reflection patterns."
          type: "research"
          deliverable: "Section in the research note."
        - id: M4.0.1.3
          description: "Investigate and document strategies for representing or annotating `async/await`."
          type: "research"
          deliverable: "Section in the research note."
        - id: M4.0.1.4
          description: "Investigate and document strategies for representing or annotating I/O operations."
          type: "research"
          deliverable: "Section in the research note."
        - id: M4.0.1.5
          description: "Update `SPECIFICATION.md` with findings and limitations regarding dynamic semantics."
          type: "documentation"
          deliverable: "Updated `SPECIFICATION.md`."

    M4_1_Control_Flow:
      name: "Comprehensive Control Flow Representation"
      tasks:
        - id: M4.1.1.1
          description: "Design and implement Holoform representation for `if/elif/else` structures."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py` and `SPECIFICATION.md`."
        - id: M4.1.2.1
          description: "Design and implement Holoform representation for `while` loops."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py` and `SPECIFICATION.md`."
        - id: M4.1.3.1
          description: "Design and implement Holoform representation for basic `try/except/finally` blocks."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py` and `SPECIFICATION.md`."
        - id: M4.1.4.1
          description: "Create a new test case for `if/elif/else` structures."
          type: "testing"
          deliverable: "Updated `test_code_strings.py` and `run_tests.py`."
        - id: M4.1.4.2
          description: "Create a new test case for `while` loops."
          type: "testing"
          deliverable: "Updated `test_code_strings.py` and `run_tests.py`."
        - id: M4.1.4.3
          description: "Create a new test case for `try/except/finally` blocks."
          type: "testing"
          deliverable: "Updated `test_code_strings.py` and `run_tests.py`."

    M4_2_Data_Flow:
      name: "Enhanced Data Flow Analysis (Intra-Holoform)"
      tasks:
        - id: M4.2.1.1
          description: "Design schema extensions to represent variable definition-use chains."
          type: "design"
          deliverable: "Updated `SPECIFICATION.md`."
        - id: M4.2.2.1
          description: "Extend the AST visitor to identify and store data dependencies."
          type: "implementation"
          deliverable: "Updated `ast_visitor.py`."
        - id: M4.2.3.1
          description: "Create a new test case to test data flow extraction accuracy."
          type: "testing"
          deliverable: "Updated `test_code_strings.py` and `run_tests.py`."

    M4_3_Call_Graph:
      name: "Inter-Holoform Call Graph & Project-Level Parsing"
      tasks:
        - id: M4.3.1.1
          description: "Develop functionality to parse all Python files from a specified project directory."
          type: "implementation"
          deliverable: "A new `project_parser.py` in `src/holoform_generators`."
        - id: M4.3.2.1
          description: "Generate Holoforms for all supported functions and class methods found within a project."
          type: "implementation"
          deliverable: "Updated `project_parser.py`."
        - id: M4.3.3.1
          description: "Construct and store a project-level Call Graph (nodes are Holoform IDs, edges are calls)."
          type: "implementation"
          deliverable: "Updated `project_parser.py`."
        - id: M4.3.4.1
          description: "Enhance the 'Simulated Zero-In POC' to use the project-level call graph for multi-hop traversal."
          type: "implementation"
          deliverable: "Updated `src/poc_integrations/task_2_4_zero_in_integration.py`."

    M4_4_Scalability:
      name: "Scalability & Performance Profiling on Real Repositories"
      tasks:
        - id: M4.4.0.1
          description: "Select and prepare 2 open-source Python repositories (10k-50k LoC) as benchmarks."
          type: "research"
          deliverable: "A new `benchmarks.md` file with repository information."
        - id: M4.4.1.1
          description: "Run the Holoform generator on the benchmark repositories."
          type: "experiment"
          deliverable: "A new experiment report."
        - id: M4.4.2.1
          description: "Profile the generator's performance (time, RAM, storage)."
          type: "analysis"
          deliverable: "Performance data in the experiment report."
        - id: M4.4.3.1
          description: "Identify and address any significant performance bottlenecks."
          type: "implementation"
          deliverable: "Code changes to improve performance."

    M4_5_Incremental_Updates:
      name: "Advanced Generator Feature - Incremental Updates"
      tasks:
        - id: M4.5.1.1
          description: "Design a strategy for incremental Holoform regeneration."
          type: "design"
          deliverable: "A new design note on incremental updates."
        - id: M4.5.2.1
          description: "Implement a basic prototype of the incremental update mechanism."
          type: "implementation"
          deliverable: "Code changes to the generator."
        - id: M4.5.3.1
          description: "Evaluate the performance benefits of incremental updates."
          type: "analysis"
          deliverable: "Performance comparison in an experiment report."

milestone_5:
  name: "Holoform-Native AI Reasoning & Advanced Applications"
  sub_tasks:
    M5_0_Loss_Budget:
      name: "Advanced Evaluation - Loss Budget"
      tasks:
        - id: M5.0.1.1
          description: "Design experiments to correlate Holoform fidelity levels with LLM performance on downstream tasks."
          type: "design"
          deliverable: "A new experiment design document."
        - id: M5.0.1.2
          description: "Conduct the experiments to establish a 'loss budget'."
          type: "experiment"
          deliverable: "A new experiment report."

    M5_1_Query_Language:
      name: "Holoform Query Language/API"
      tasks:
        - id: M5.1.1.1
          description: "Research existing graph query languages and design a conceptual query language for the Holoform graph."
          type: "research"
          deliverable: "A new design document for the query language."
        - id: M5.1.2.1
          description: "Implement a prototype of the query API."
          type: "implementation"
          deliverable: "A new `query_api.py` in `src/holoform_generators`."

    M5_2_AI_Debugging:
      name: "AI-Assisted Debugging with Holoform Graph"
      tasks:
        - id: M5.2.1.1
          description: "Develop AI agent logic for complex bug localization tasks using the project-level Holoform graph."
          type: "implementation"
          deliverable: "A new `debugger_agent.py`."
        - id: M5.2.2.1
          description: "Evaluate the agent's performance against a benchmark of publicly documented bugs."
          type: "analysis"
          deliverable: "An experiment report with performance metrics."
        - id: M5.2.3.1
          description: "Investigate how to integrate dynamic analysis information to weight paths in the Holoform graph."
          type: "research"
          deliverable: "A research note on integrating dynamic analysis."

    M5_3_Summarization:
      name: "Advanced Code Understanding & Summarization"
      tasks:
        - id: M5.3.1.1
          description: "Experiment with AI agents using the Query API to generate multi-Holoform summaries."
          type: "experiment"
          deliverable: "An experiment report."
        - id: M5.3.2.1
          description: "Compare the quality of the generated summaries against baselines."
          type: "analysis"
          deliverable: "Analysis section in the experiment report."

    M5_4_Code_Modification:
      name: "(Exploratory) Holoforms for AI-Assisted Code Modification & Security"
      tasks:
        - id: M5.4.1.1
          description: "Conceptualize how the Holoform graph and Query API could be used by an LLM to identify locations for code modifications and predict ripple effects."
          type: "research"
          deliverable: "A research note on AI-assisted code modification."
        - id: M5.4.2.1
          description: "Define a preliminary threat model for Holoform-guided AI code modification."
          type: "research"
          deliverable: "A research note on the threat model."
